apiVersion: v1
kind: Service
metadata:
  annotations:
    kompose.cmd: kompose convert -f docker-compose.yaml
    kompose.version: 1.30.0 (9d8dcb518)
  labels:
    io.kompose.service: ruby-on-rails
  name: ruby-on-rails
  namespace: default
spec:
  ports:
    - name: "Application"
      port: 3000
      targetPort: 3000
  selector:
    io.kompose.service: ruby-on-rails

---

apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    kompose.cmd: kompose convert -f docker-compose.yaml
    kompose.version: 1.30.0 (9d8dcb518)
  labels:
    io.kompose.service: ruby-on-rails
  name: ruby-on-rails
  namespace: default
spec:
  replicas: 1
  selector:
    matchLabels:
      io.kompose.service: ruby-on-rails
  strategy: {}
  template:
    metadata:
      annotations:
        kompose.cmd: kompose convert -f docker-compose.yaml
        kompose.version: 1.30.0 (9d8dcb518)
      labels:
        io.kompose.network/ruby-on-rails-default: "true"
        io.kompose.service: ruby-on-rails
    spec:
      containers:
        - args:
            - bin/rails
            - server
          env:
            - name: MW_API_KEY
              value: your-api-key
            - name: OTEL_EXPORTER_OTLP_ENDPOINT
              value: http://mw-service.mw-agent-ns.svc.cluster.local:9320
            - name: OTEL_RESOURCE_ATTRIBUTES
              value: 'project.name: "project-name"'
            - name: OTEL_SERVICE_NAME
              value: service-name
          image: your-image-name:tag
          name: ruby-on-rails
          ports:
            - containerPort: 3000
              hostPort: 3000
              protocol: TCP
          resources: {}
          workingDir: /app
      restartPolicy: Always
